<!--
    Copyright (c) Arash Khatami
    Distributed under the MIT license. See the LICENSE file in the project root for more information.
-->
<UserControl x:Class="NodeGraphEditor.Editors.GroupNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:editors="clr-namespace:NodeGraphEditor.Editors" d:DataContext="{d:DesignInstance Type=editors:GroupNode}" 
             mc:Ignorable="d" UseLayoutRounding="False" SnapsToDevicePixels="False"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <SolidColorBrush x:Key="backgroundBrush" Color="{Binding Color}" Opacity="0.1"/>
        <SolidColorBrush x:Key="borderBrush" Color="{Binding Color}" Opacity="0.5"/>
    </UserControl.Resources>
    <Grid>
        <Border Background="{StaticResource backgroundBrush}" 
                IsHitTestVisible="False" x:Name="bd">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="{DynamicResource borderBrush}"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="BorderBrush" Value="LightBlue"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <!-- Selected Node blurred border -->
        <Border IsHitTestVisible="False">
            <Border.Effect>
                <BlurEffect Radius="5"/>
            </Border.Effect>
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="LightBlue"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <!-- Selected node glow -->
        <Border IsHitTestVisible="False">
            <Border.Effect>
                <BlurEffect Radius="10"/>
            </Border.Effect>
            <Border.Background>
                <LinearGradientBrush StartPoint="0,1.0" EndPoint="0,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#2f569de5" Offset="0"/>
                        <GradientStop Color="#00569de5" Offset="0.4"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.Background>
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Background="{StaticResource borderBrush}" Grid.Row="0"
                  Margin="{Binding Path=BorderThickness, ElementName=bd}">
                <TextBlock Text="{Binding Name}" Margin="5,0,0,3" FontWeight="Bold"/>
            </Grid>

            <Border Grid.Row="1" Width="{Binding Width}" Height="{Binding Height}"
                    IsHitTestVisible="False"/>
        </Grid>
    </Grid>
</UserControl>
